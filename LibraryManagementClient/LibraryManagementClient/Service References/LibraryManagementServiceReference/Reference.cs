//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LibraryManagementClient.LibraryManagementServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LibraryManagementServiceReference.IBooksService")]
    public interface IBooksService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBooksService/GetCategories", ReplyAction="http://tempuri.org/IBooksService/GetCategoriesResponse")]
        System.Data.DataSet GetCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBooksService/GetCategories", ReplyAction="http://tempuri.org/IBooksService/GetCategoriesResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBooksService/addCategory", ReplyAction="http://tempuri.org/IBooksService/addCategoryResponse")]
        string addCategory(string categoryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBooksService/addCategory", ReplyAction="http://tempuri.org/IBooksService/addCategoryResponse")]
        System.Threading.Tasks.Task<string> addCategoryAsync(string categoryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBooksService/deleteCategory", ReplyAction="http://tempuri.org/IBooksService/deleteCategoryResponse")]
        string deleteCategory(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBooksService/deleteCategory", ReplyAction="http://tempuri.org/IBooksService/deleteCategoryResponse")]
        System.Threading.Tasks.Task<string> deleteCategoryAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBooksService/updateCategory", ReplyAction="http://tempuri.org/IBooksService/updateCategoryResponse")]
        string updateCategory(int id, string newCategoryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBooksService/updateCategory", ReplyAction="http://tempuri.org/IBooksService/updateCategoryResponse")]
        System.Threading.Tasks.Task<string> updateCategoryAsync(int id, string newCategoryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBooksService/getBooks", ReplyAction="http://tempuri.org/IBooksService/getBooksResponse")]
        System.Data.DataSet getBooks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBooksService/getBooks", ReplyAction="http://tempuri.org/IBooksService/getBooksResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> getBooksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBooksService/addBooks", ReplyAction="http://tempuri.org/IBooksService/addBooksResponse")]
        string addBooks(string bookName, string author, string edition, string pages, string price, System.Collections.Generic.Dictionary<string, int> d);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBooksService/addBooks", ReplyAction="http://tempuri.org/IBooksService/addBooksResponse")]
        System.Threading.Tasks.Task<string> addBooksAsync(string bookName, string author, string edition, string pages, string price, System.Collections.Generic.Dictionary<string, int> d);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBooksService/deleteBook", ReplyAction="http://tempuri.org/IBooksService/deleteBookResponse")]
        string deleteBook(int bookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBooksService/deleteBook", ReplyAction="http://tempuri.org/IBooksService/deleteBookResponse")]
        System.Threading.Tasks.Task<string> deleteBookAsync(int bookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBooksService/updateBook", ReplyAction="http://tempuri.org/IBooksService/updateBookResponse")]
        string updateBook(int bookId, string bookName, string author, string edition, string pages, string price, System.Collections.Generic.Dictionary<string, int> d);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBooksService/updateBook", ReplyAction="http://tempuri.org/IBooksService/updateBookResponse")]
        System.Threading.Tasks.Task<string> updateBookAsync(int bookId, string bookName, string author, string edition, string pages, string price, System.Collections.Generic.Dictionary<string, int> d);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBooksService/getBooksByCategory", ReplyAction="http://tempuri.org/IBooksService/getBooksByCategoryResponse")]
        System.Data.DataSet getBooksByCategory(string category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBooksService/getBooksByCategory", ReplyAction="http://tempuri.org/IBooksService/getBooksByCategoryResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> getBooksByCategoryAsync(string category);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBooksServiceChannel : LibraryManagementClient.LibraryManagementServiceReference.IBooksService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BooksServiceClient : System.ServiceModel.ClientBase<LibraryManagementClient.LibraryManagementServiceReference.IBooksService>, LibraryManagementClient.LibraryManagementServiceReference.IBooksService {
        
        public BooksServiceClient() {
        }
        
        public BooksServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BooksServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BooksServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BooksServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet GetCategories() {
            return base.Channel.GetCategories();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCategoriesAsync() {
            return base.Channel.GetCategoriesAsync();
        }
        
        public string addCategory(string categoryName) {
            return base.Channel.addCategory(categoryName);
        }
        
        public System.Threading.Tasks.Task<string> addCategoryAsync(string categoryName) {
            return base.Channel.addCategoryAsync(categoryName);
        }
        
        public string deleteCategory(int id) {
            return base.Channel.deleteCategory(id);
        }
        
        public System.Threading.Tasks.Task<string> deleteCategoryAsync(int id) {
            return base.Channel.deleteCategoryAsync(id);
        }
        
        public string updateCategory(int id, string newCategoryName) {
            return base.Channel.updateCategory(id, newCategoryName);
        }
        
        public System.Threading.Tasks.Task<string> updateCategoryAsync(int id, string newCategoryName) {
            return base.Channel.updateCategoryAsync(id, newCategoryName);
        }
        
        public System.Data.DataSet getBooks() {
            return base.Channel.getBooks();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getBooksAsync() {
            return base.Channel.getBooksAsync();
        }
        
        public string addBooks(string bookName, string author, string edition, string pages, string price, System.Collections.Generic.Dictionary<string, int> d) {
            return base.Channel.addBooks(bookName, author, edition, pages, price, d);
        }
        
        public System.Threading.Tasks.Task<string> addBooksAsync(string bookName, string author, string edition, string pages, string price, System.Collections.Generic.Dictionary<string, int> d) {
            return base.Channel.addBooksAsync(bookName, author, edition, pages, price, d);
        }
        
        public string deleteBook(int bookId) {
            return base.Channel.deleteBook(bookId);
        }
        
        public System.Threading.Tasks.Task<string> deleteBookAsync(int bookId) {
            return base.Channel.deleteBookAsync(bookId);
        }
        
        public string updateBook(int bookId, string bookName, string author, string edition, string pages, string price, System.Collections.Generic.Dictionary<string, int> d) {
            return base.Channel.updateBook(bookId, bookName, author, edition, pages, price, d);
        }
        
        public System.Threading.Tasks.Task<string> updateBookAsync(int bookId, string bookName, string author, string edition, string pages, string price, System.Collections.Generic.Dictionary<string, int> d) {
            return base.Channel.updateBookAsync(bookId, bookName, author, edition, pages, price, d);
        }
        
        public System.Data.DataSet getBooksByCategory(string category) {
            return base.Channel.getBooksByCategory(category);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getBooksByCategoryAsync(string category) {
            return base.Channel.getBooksByCategoryAsync(category);
        }
    }
}
